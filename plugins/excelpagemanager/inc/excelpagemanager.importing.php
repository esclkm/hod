<?php/** * [BEGIN_COT_EXT] * Hooks=tools * [END_COT_EXT] *//** * Excel Page Importer / Exporter plugin * * @package excelpagemanager * @version 2.0.0 * @author esclkm * @copyright Copyright (c) esclkm 2008-2013 * @license BSD */defined('COT_CODE') or die('Wrong URL');require_once $cfg['plugins_dir'].'/excelpagemanager/lib/eiseXLSX/eiseXLSX.php';$importfile = (isset($_FILES['importfile']) && ($_FILES['importfile']['error'] == UPLOAD_ERR_OK) ) ? $_FILES['importfile'] : null;$file_ext = mb_strtolower(end(explode(".", $importfile["name"])));$configs = cot_import('configs', 'P', 'TXT');$xlsc = &$xlsx_import_config[$configs];$added = 0;$updated = 0;$added_id = array();$updated_id = array();if ($file_ext = 'xlsx' && is_array($xlsc)){	$xlsx = new eiseXLSX($importfile["tmp_name"]);	if(is_array($xlsc['initial_callback']))	{		foreach ($xlsc['initial_callback'] as $callcack)		{			if (function_exists($callcack))			{				$callcack();			}		}	}	for ($r = $xlsc['offset']; $r <= $xlsx->getRowCount(); $r++)	{		$ins_replace = 'fieldsimport';		$replace_id = 0;		if (!empty($xlsc['where']['col']))		{			$qu_v = $xlsx->data($xlsc['where']['col'].$r);			$replace_id = (int)$db->query("SELECT page_id FROM $db_pages WHERE ".$db->prep($xlsc['where']['field'])." = '".$db->prep($qu_v)."' LIMIT 1")->fetchColumn();			$ins_replace = (int)$replace_id > 0 ? 'fieldsreplace' : $ins_replace;		}		if (!$id && !empty($xlsc['where2']['col']))		{			$qu_v2 = $xlsx->data($xlsc['where2']['col'].$r);			$replace_id = (int)$db->query("SELECT page_id FROM $db_pages WHERE ".$db->prep($xlsc['where2']['field'])." = '".$db->prep($qu_v2)."' LIMIT 1")->fetchColumn();			$ins_replace = (int)$replace_id > 0 ? 'fieldsreplace' : $ins_replace;		}		if(count($xlsc[$ins_replace]) && (!empty($qu_v) || !empty($qu_v2)))		{			$datap = array();			foreach ($xlsc[$ins_replace] as $key => $val)			{				$valer = $xlsx->data($val['col'].$r);				$datap[$key] = filterxlsx($valer, $val['type'], $val['value'], $val['default']);			}			if ($ins_replace == 'fieldsreplace')			{				$db->update($db_pages, $datap, "page_id = '".(int)$replace_id."'");				$updated++;				$updated_id[] = $replace_id;			}			else			{				$db->insert($db_pages, $datap);				$id = $db->lastInsertId();				$added++;				$added_id[] = $id;			}			foreach ($xlsc['callbacks'] as $callcack => $params)			{				if (function_exists($callcack))				{					$callcack($id, $datap);				}			}		}	}	if ($added > 0 || $updated > 0)	{		$res = false;		$area_sync = 'cot_page_sync';		if (function_exists($area_sync))		{			$res = true;			$sql = $db->query("SELECT structure_code FROM $db_structure WHERE structure_area='".$db->prep('page')."'");			foreach ($sql->fetchAll() as $row)			{				$cat = $row['structure_code'];				$items = $area_sync($cat);				$db->update($db_structure, array("structure_count" => (int)$items), "structure_code='".$db->prep($cat)."' AND structure_area='".$db->prep('page')."'");			}			$sql->closeCursor();		}		if ($updated > 0)		{			cot_message($L['updated'].$updated.'; #'.implode(', #', $updated_id));		}		if ($added > 0)		{			cot_message($L['added'].$added.'; #'.implode(', #', $added_id));		}		cot_message('Resynced'); // TODO i18n		($cache && $cfg['cache_page']) && $cache->page->clear('page');	}	else	{		cot_error('noadded');	}}else{	cot_error('noxls');}cot_redirect(cot_url('admin', 'm=other&p=excelpagemanager', '', true));