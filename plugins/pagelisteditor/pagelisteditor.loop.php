<?php

/**
 * [BEGIN_COT_EXT]
 * Hooks=page.list.loop
 * [END_COT_EXT]
 */
/**
 * plugin pagelisteditor for Cotonti Siena
 * 
 * @package pagelisteditor
 * @version 1.0.0
 * @author esclkm
 * @copyright 
 * @license BSD
 *  */
// Generated by Cotonti developer tool (littledev.ru)
defined('COT_CODE') or die('Wrong URL.');


if ($action == 'edit')
{
	$pag['page_status'] = cot_page_status($pag['page_state'], $pag['page_begin'], $pag['page_expire']);
	$sys['parser'] = $pag['page_parser'];
	$id = $pag['page_id'];

	$t->assign(cot_generate_pagetags($pag, 'LIST_ROW_TAGS_', 0, $usr['isadmin']));
	$t->assign(array(
		'LIST_ROW_ID' => $pag['page_id'],
		'LIST_ROW_STATE' => $pag['page_state'],
		'LIST_ROW_EDITSTATE' => cot_selectbox($pag['page_state'], 'rpagestate[' . $id . ']', array(0, 1, 2), array($L['page_status_approved'], $L['page_status_pending'], $L['page_status_draft']), false),
		'LIST_ROW_DELETE' => cot_checkbox(0, 'rpagedelete[' . $id . ']', $L['Delete']),
		'LIST_ROW_STATUS' => $pag['page_status'],
		'LIST_ROW_LOCALSTATUS' => $L['page_status_' . $pag['page_status']],
		'LIST_ROW_CAT' => cot_selectbox_structure('page', $pag['page_cat'], 'rpagecat[' . $id . ']'),
		'LIST_ROW_CAT_SHORT' => cot_selectbox_structure('page', $pag['page_cat'], 'rpagecat[' . $id . ']', $c),
		'LIST_ROW_KEYWORDS' => cot_inputbox('text', 'rpagekeywords[' . $id . ']', $pag['page_keywords'], array('size' => '32', 'maxlength' => '255')),
		'LIST_ROW_ALIAS' => cot_inputbox('text', 'rpagealias[' . $id . ']', $pag['page_alias'], array('size' => '32', 'maxlength' => '255')),
		'LIST_ROW_TITLE' => cot_inputbox('text', 'rpagetitle[' . $id . ']', $pag['page_title'], array('size' => '64', 'maxlength' => '255')),
		'LIST_ROW_DESC' => cot_inputbox('text', 'rpagedesc[' . $id . ']', $pag['page_desc'], array('size' => '64', 'maxlength' => '255')),
		'LIST_ROW_AUTHOR' => cot_inputbox('text', 'rpageauthor[' . $id . ']', $pag['page_author'], array('size' => '24', 'maxlength' => '100')),
		'LIST_ROW_DATE' => cot_selectbox_date($pag['page_date'], 'long', 'rpagedate[' . $id . ']') . ' ' . $usr['timetext'],
		'LIST_ROW_DATENOW' => cot_checkbox(0, 'rpagedatenow[' . $id . ']'),
		'LIST_ROW_BEGIN' => cot_selectbox_date($pag['page_begin'], 'long', 'rpagebegin[' . $id . ']') . ' ' . $usr['timetext'],
		'LIST_ROW_EXPIRE' => cot_selectbox_date($pag['page_expire'], 'long', 'rpageexpire[' . $id . ']') . ' ' . $usr['timetext'],
		'LIST_ROW_UPDATED' => cot_date('datetime_full', $pag['page_updated']) . ' ' . $usr['timetext'],
		'LIST_ROW_FILE' => cot_selectbox($pag['page_file'], 'rpagefile[' . $id . ']', range(0, 2), array($L['No'], $L['Yes'], $L['Members_only']), false),
		'LIST_ROW_URL' => cot_inputbox('text', 'rpageurl[' . $id . ']', $pag['page_url'], array('size' => '56', 'maxlength' => '255')),
		'LIST_ROW_SIZE' => cot_inputbox('text', 'rpagesize[' . $id . ']', $pag['page_size'], array('size' => '56', 'maxlength' => '255')),
		'LIST_ROW_TEXT' => cot_textarea('rpagetext[' . $id . ']', $pag['page_text'], 24, 120, '', 'input_textarea_editor'),
		'LIST_ROW_TEXT_LITE' => cot_textarea('rpagetext[' . $id . ']', $pag['page_text'], 24, 120, ''),
		'LIST_ROW_DELETE_HREF' => cot_url('page', "&action=delete&d=$durl&c=$c&id=" . $id),
		'LIST_ROW_OPEN_HREF' => cot_url('page', 'c=' . $pag['page_cat'] . '&id=' . $id),
		'LIST_ROW_EDIT_HREF' => cot_url('page', "m=edit&id=" . $pag['page_id']),
		'LIST_ROW_PARSER' => cot_selectbox($pag['page_parser'], 'rpageparser[' . $id . ']', cot_get_parsers(), cot_get_parsers(), false),
		'LIST_ROW_OWNERID' => cot_inputbox('text', 'rpageownerid[' . $id . ']', $pag['page_ownerid'], array('size' => '24', 'maxlength' => '24')),
		'LIST_ROW_PAGECOUNT' => cot_inputbox('text', 'rpagecount[' . $id . ']', $pag['page_count'], array('size' => '8', 'maxlength' => '8')),
		'LIST_ROW_FILECOUNT' => cot_inputbox('text', 'rpagefilecount[' . $id . ']', $pag['page_filecount'], array('size' => '8', 'maxlength' => '8'))
	));

// Extra fields
	foreach ($cot_extrafields[$db_pages] as $exfld)
	{
		$uname = strtoupper($exfld['field_name']);
		$exfld_val = cot_build_extrafields('rpage' . $exfld['field_name'] . '[' . $id . ']', $exfld, $pag['page_' . $exfld['field_name']]);
		$exfld_title = isset($L['page_' . $exfld['field_name'] . '_title']) ? $L['page_' . $exfld['field_name'] . '_title'] : $exfld['field_description'];

		$t->assign(array(
			'LIST_ROW_' . $uname => $exfld_val,
			'LIST_ROW_' . $uname . '_TITLE' => $exfld_title,
			'LIST_ROW_EXTRAFLD' => $exfld_val,
			'LIST_ROW_EXTRAFLD_TITLE' => $exfld_title
		));
		$t->parse('MAIN.LIST_ROW.EXTRAFLD');
	}
}
